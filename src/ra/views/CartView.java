package ra.views;

import ra.config.Validate;
import ra.model.Cart;
import ra.model.Order;
import ra.model.Product;
import ra.model.User;
import ra.service.*;

import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;

import static ra.config.ConsoleColor.*;
import static ra.config.InputMethods.*;
import static ra.config.InputMethods.getString;
import static ra.config.Until.formatCurrency;

public class CartView {

    private UserViews userViews;
    private UserService userService;
    private CartService cartService;
    private ProductService productService;
    private OrderService orderService;
    private CategoryService categoryService;

    public CartView() {
        this.userViews = new UserViews();
        this.userService = new UserService();
        this.cartService = new CartService();
        this.productService = new ProductService();
        this.orderService = new OrderService();
        this.categoryService = new CategoryService();
    }


    public void displayMenuCart() {
        int selectCart;
        while (true) {


            print(YELLOW);
            System.out.println(".-------------------------------------------------------------.");
            System.out.println("|                            MENU-GI·ªé H√ÄNG                    |");
            System.out.println("|-------------------------------------------------------------|");
            System.out.println("|                     1. DANH S√ÅCH S·∫¢N PH·∫®M TRONG GI·ªé H√ÄNG    |");
            System.out.println("|                     2. CH·ªàNH S·ª¨A S·ªê L∆Ø·ª¢NG S·∫¢N PH·∫®M          |");
            System.out.println("|                     3. X√ìA 1 S·∫¢N PH·∫®M TRONG GI·ªé H√ÄNG        |");
            System.out.println("|                     4. X√ìA TO√ÄN B·ªò S·∫¢N PH·∫®M TRONG GI·ªé H√ÄNG  |");
            System.out.println("|                     5. THANH TO√ÅN                           |");
            System.out.println("|                     6. L·ªäCH S·ª¨ MUA H√ÄNG                     |");
            System.out.println("|                     7. QUAY L·∫†I MENU TR∆Ø·ªöC                  |");
            System.out.println("|                     0. ƒêƒÇNG XU·∫§T                            |");
            System.out.println("'-------------------------------------------------------------'");
            System.out.println("Nh·∫≠p v√†o l·ª±a ch·ªçn c·ªßa b·∫°n üß°üß° : ");
            printFinish();
            System.out.println("Nhap lua chon cua ban : ");
            selectCart = getInteger();
            switch (selectCart) {
                case 1:

                    displayAllCart();
                    break;
                case 2:
                    updateQuantity();
                    break;
                case 3:
                    deleteProductInCart();
                    break;
                case 4:
                    deleteAllProductInCart();
                    break;
                case 5:
                    endPay();
                    break;
                case 6:
                    new OrderView().OrderMenuHistory();
                    break;
                case 7:
                    return;
                case 0:
                    new UserViews().logout();
                    break;
                default:
                    System.err.println("--->> Lua chon khong phu hop. Vui long chon lai ‚ù§ ");
                    break;
            }
        }
    }

    private void displayAllCart() {
        List<Cart> carts = cartService.userLogin().getCart();

        if (carts.isEmpty()) {
            printlnError("Gi·ªè h√†ng r·ªóng !!.");
            return;
        }
        print(GREEN);
        System.out.println("                             DANH S√ÅCH GI·ªé H√ÄNG        ");
        System.out.println("|--------------------------------------------------------------------------|");
        System.out.println("|" + "  ID  |        PRODUCT    |    QUANTITY  |       PRIME    |     TOTAL    " + " |");
        System.out.println("|--------------------------------------------------------------------------|");

        for (Cart ca : carts) {
            System.out.printf("|%-5d | %-17s | %-12s | %-15s|%-15s| %n",
                    ca.getCartId(), ca.getProduct().getProductName(), ca.getQuantity(), formatCurrency(ca.getProduct().getPrice()), formatCurrency(ca.getQuantity() * ca.getProduct().getPrice()));
        }
        System.out.println("|--------------------------------------------------------------------------|");
        printFinish();
    }

    private void updateQuantity() {
        System.out.println("Nh·∫≠p v√†o ID: ");
        int idCart = getInteger();
        User user = cartService.userLogin();
        List<Cart> carts = user.getCart();
        Cart cart = cartService.findById(idCart);
        if (cart == null) {
            printlnError("S·∫£n ph·∫©m kh√¥ng t·ªìn t·∫°i trong gi·ªè h√†ng!!");
            return;
        }

        System.out.println("Nh·∫≠p v√†o s·ªë l∆∞·ª£ng mu·ªën c·∫≠p nh·∫≠t m·ªõi: ");
        int updateQuantity = getInteger();
        if (updateQuantity <= 0) {
            printlnError("S·ªë l∆∞·ª£ng c·∫≠p nh·∫≠t ph·∫£i l·ªõn h∆°n 0");
        } else if (updateQuantity > cart.getProduct().getStock()) {
            printlnError("S·ªë l∆∞·ª£ng s·∫£n ph·∫©m v∆∞·ª£t qu√° t·ªìn kho.");
        } else {
            cart.setQuantity(updateQuantity);
            int index = cartService.findIndex1(idCart);
            carts.set(index, cart);
            printlnSuccess("C·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng th√†nh c√¥ng üéàüéà.");
            userService.save(user);
//            cartService.save(cart);
        }
    }

    private void deleteProductInCart() {
        System.out.println("Nh·∫≠p v√†o ID");
        int idCart = getInteger();
        int index = cartService.findIndex(idCart);

        if (index == -1) {
            System.err.println("S·∫£n ph·∫©m kh√¥ng t·ªìn t·∫°i trong gi·ªè h√†ng.");
            return;
        }
        cartService.deleteCart(index);
        System.out.println("S·∫£n ph·∫©m ƒë√£ ƒë∆∞·ª£c x√≥a");
    }

    private void deleteAllProductInCart() {
        cartService.deleteAll();
        System.out.println("ƒê√£ x√≥a to√†n b·ªô s·∫£n ph·∫©m ");
    }

    private void endPay() {

        User user = cartService.userLogin();
        if (user.getCart().isEmpty()) {
            printlnMess("Ch∆∞a c√≥ ƒë∆°n h√†ng c·∫ßn thanh to√°n !!.");
            return;
        }
        Order newOrder = new Order();
        newOrder.setId(orderService.autoInc());

        // C·∫≠p nh·∫≠t t·ªïng ti·ªÅn
        double total = 0;
        for (Cart ca : user.getCart()) {
            total += ca.getProduct().getPrice() * ca.getQuantity();
        }
        newOrder.setTotal(total);
        newOrder.setIdUser((int) userService.userActive().getId());
        System.out.println("Nh·∫≠p t√™n ng∆∞·ªùi nh·∫≠n h√†ng: ");
        newOrder.setReceiver(getString());
        System.out.println("Nh·∫≠p s·ªë ƒëi·ªán tho·∫°i ng∆∞·ªùi nh·∫≠n: ");
        while (true) {
            String phone = scanner().nextLine();
            if (Validate.isValidPhone(phone)) {
                newOrder.setNumberPhone(phone);
                break;
            }
            ;
        }

        System.out.println("Nh·∫≠p v√†o ƒë·ªãa ch·ªâ ng∆∞·ªùi nh·∫≠n:");
        newOrder.setAddress(getString());
        newOrder.setBuyDate(LocalDate.now());
//        newOrder.setStatus(WAITING);
        // Ti·∫øn h√†nh tr·ª´ ƒëi s·ªë l∆∞·ª£ng trong kho h√†ng
        boolean flag = true;
        for (Cart ca : user.getCart()) {
            Product pt = productService.findById((int) ca.getProduct().getId());
            if (pt.getStock() - ca.getQuantity() >= 0) {
                flag = false;
                pt.setStock(pt.getStock() - ca.getQuantity());
                productService.updateQuantity(pt);
            }

        }
        if (flag) {
            printlnError(
                    "ƒê·ªõn h√†ng kh√¥ng ƒë∆∞·ª£c t·∫°o th√†nh c√¥ng, do s·ªë l∆∞·ª£ng ƒë·∫∑t h√†ng l·ªõn h∆°n trong kho"
            );
        }

        printlnSuccess("ƒê·∫∑t h√†ng th√†nh c√¥ngüéàüéà.Vui l√≤ng ch·ªù x√°c nh·∫≠n !!.");
        orderService.save(newOrder);
        Order order = new Order();
        userService.save(user);
        order.setOrderDetail(user.getCart());
        user.setCart(new ArrayList<>());
        userService.save(user);
    }


}
